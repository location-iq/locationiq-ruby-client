=begin
#LocationIQ

#LocationIQ provides flexible enterprise-grade location based solutions. We work with developers, startups and enterprises worldwide serving billions of requests everyday. This page provides an overview of the technical aspects of our API and will help you get started.

OpenAPI spec version: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for LocationIQClient::ReverseApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReverseApi' do
  before do
    # run before each test
    @instance = LocationIQClient::ReverseApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReverseApi' do
    it 'should create an instance of ReverseApi' do
      expect(@instance).to be_instance_of(LocationIQClient::ReverseApi)
    end
  end

  # unit tests for reverse
  # Reverse Geocoding
  # Reverse geocoding is the process of converting a coordinate or location (latitude, longitude) to a readable address or place name. This permits the identification of nearby street addresses, places, and/or area subdivisions such as a neighborhood, county, state, or country.
  # @param lat Latitude of the location to generate an address for.
  # @param lon Longitude of the location to generate an address for.
  # @param format Format to geocode. Only JSON supported for SDKs
  # @param normalizecity Normalizes village to city level data to city
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :addressdetails Include a breakdown of the address into elements. Defaults to 1.
  # @option opts [String] :accept_language Preferred language order for showing search results, overrides the value specified in the Accept-Language HTTP header. Defaults to en. To use native language for the response when available, use accept-language&#x3D;native
  # @option opts [Integer] :namedetails Include a list of alternative names in the results. These may include language variants, references, operator and brand.
  # @option opts [Integer] :extratags Include additional information in the result if available, e.g. wikipedia link, opening hours.
  # @return [Location]
  describe 'reverse test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
